<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='AnalisePokmon' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Pokemon' inline='true' name='federated.01271h103hm17y0zzu53e0zf2tw0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Pokemon' name='textscan.0mzh9bz11ugfvi16he6vl0pv2vip'>
            <connection class='textscan' directory='C:/Users/jhord/Documents/GitHub/Repositorio-Geral/teste' filename='Pokemon.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0mzh9bz11ugfvi16he6vl0pv2vip' name='Pokemon.csv' table='[Pokemon#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR' separator='&#9;'>
            <column datatype='integer' name='#' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Type 1' ordinal='2' />
            <column datatype='string' name='Type 2' ordinal='3' />
            <column datatype='integer' name='Total' ordinal='4' />
            <column datatype='integer' name='HP' ordinal='5' />
            <column datatype='integer' name='Attack' ordinal='6' />
            <column datatype='integer' name='Defense' ordinal='7' />
            <column datatype='integer' name='Sp. Atk' ordinal='8' />
            <column datatype='integer' name='Sp. Def' ordinal='9' />
            <column datatype='integer' name='Speed' ordinal='10' />
            <column datatype='integer' name='Generation' ordinal='11' />
            <column datatype='boolean' name='Legendary' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type 1]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Type 1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type 2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type 2]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Type 2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HP]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>HP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attack</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Attack]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Attack</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defense</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Defense]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Defense</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sp. Atk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sp. Atk]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Sp. Atk</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sp. Def</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sp. Def]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Sp. Def</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speed]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Speed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Generation]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Generation</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legendary</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Legendary]</local-name>
            <parent-name>[Pokemon.csv]</parent-name>
            <remote-alias>Legendary</remote-alias>
            <ordinal>12</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Attack]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Defense]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[HP]' role='measure' type='quantitative' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Sp. Atk]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sp. Def]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Speed]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[Type 2]' role='dimension' type='nominal' />
      <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Attack]' derivation='Sum' name='[sum:Attack:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Defense]' derivation='Sum' name='[sum:Defense:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HP]' derivation='Sum' name='[sum:HP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sp. Atk]' derivation='Sum' name='[sum:Sp. Atk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sp. Def]' derivation='Sum' name='[sum:Sp. Def:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Speed]' derivation='Sum' name='[sum:Speed:qk]' pivot='key' type='quantitative' />
      <group caption='Ação (Name)' hidden='true' name='[Action (Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='pt_BR' class='hyper' dbname='C:/Users/jhord/Documents/Meu Repositório do Tableau/Fontes de dados/Pokemon.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/16/2018 12:58:26 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='800' timestamp-start='2018-08-16 00:58:26.922' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>#</remote-name>
              <remote-type>20</remote-type>
              <local-name>[#]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#</remote-alias>
              <ordinal>0</ordinal>
              <family>Pokemon.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>800</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>1</ordinal>
              <family>Pokemon.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>800</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPT_RBR' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type 1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Type 1</remote-alias>
              <ordinal>2</ordinal>
              <family>Pokemon.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPT_RBR' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type 2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Type 2</remote-alias>
              <ordinal>3</ordinal>
              <family>Pokemon.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LPT_RBR' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total</remote-alias>
              <ordinal>4</ordinal>
              <family>Pokemon.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>204</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HP</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HP</remote-alias>
              <ordinal>5</ordinal>
              <family>Pokemon.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Attack</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Attack]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Attack</remote-alias>
              <ordinal>6</ordinal>
              <family>Pokemon.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Defense</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Defense]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Defense</remote-alias>
              <ordinal>7</ordinal>
              <family>Pokemon.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sp. Atk</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Sp. Atk]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sp. Atk</remote-alias>
              <ordinal>8</ordinal>
              <family>Pokemon.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sp. Def</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Sp. Def]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sp. Def</remote-alias>
              <ordinal>9</ordinal>
              <family>Pokemon.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Speed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Speed</remote-alias>
              <ordinal>10</ordinal>
              <family>Pokemon.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generation</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Generation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generation</remote-alias>
              <ordinal>11</ordinal>
              <family>Pokemon.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Legendary</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Legendary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Legendary</remote-alias>
              <ordinal>12</ordinal>
              <family>Pokemon.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.412863' measure-ordering='alphabetic' measure-percentage='0.587137' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Sp. Atk:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Attack:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Speed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01271h103hm17y0zzu53e0zf2tw0].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:HP:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Defense:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Sp. Def:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aerodactyl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Archeops&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Basculin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Blissey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CameruptMega Camerupt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chespin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Corphish&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Deerling&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Doublade&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwebble&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Exeggutor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forretress&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gengar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Golett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Growlithe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hitmonchan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Inkay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kingler&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LandorusTherian Forme&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Litleo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Magcargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marowak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mewtwo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Munna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oddish&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Phanpy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poliwrath&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quilladin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rhyhorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sandslash&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Servine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Simipour&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Smoochum&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Staravia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swellow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togekiss&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyranitar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vibrava&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Weepinbell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yanmega&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abomasnow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amoonguss&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Azumarill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bibarel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulbasaur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CharizardMega Charizard X&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clefairy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cubchoo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diancie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dugtrio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emolga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flareon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garbodor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gligar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Granbull&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Heatran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HoundoomMega Houndoom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kakuna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyogre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ledyba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lunatone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manectric&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MeowsticMale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mismagius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ninjask&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pansear&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pineco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PumpkabooSmall Size&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Regigigas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rufflet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seadra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shieldon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sliggoo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spinarak&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunkern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tentacruel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Treecko&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanilluxe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vulpix&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WormadamSandy Cloak&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AbsolMega Absol&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arbok&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Banette&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blastoise&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butterfree&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chatot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cofagrigus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DarmanitanStandard Mode&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ditto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dusclops&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Espeon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Floette&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GardevoirMega Gardevoir&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Golbat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grotle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HeracrossMega Heracross&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hypno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kecleon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KyuremWhite Kyurem&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lileep&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Machamp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mantyke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MetagrossMega Metagross&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mr. Mime&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nosepass&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pawniard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plusle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Purugly&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Remoraid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SalamenceMega Salamence&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shuckle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slowpoke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spritzee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swalot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ThundurusIncarnate Forme&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turtwig&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venonat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wartortle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Xatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aipom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beautifly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bouffalant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carvanha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinchou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cranidos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Delphox&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drapion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ekans&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Feebas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frogadier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gigalith&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gorebyss&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gyarados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honchkrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jirachi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Klink&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Larvitar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LopunnyMega Lopunny&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Magnemite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MawileMega Mawile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mienshao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nidoking&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oshawott&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pidgeot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Porygon2&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ralts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roselia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sceptile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SharpedoMega Sharpedo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Skiddo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Snorunt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steelix&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sylveon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Torkoal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyrunt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vileplume&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Whiscash&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zebstrika&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AerodactylMega Aerodactyl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ariados&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bastiodon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Blitzle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carbink&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chikorita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corsola&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Deino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dragalge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eelektrik&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Exploud&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fraxure&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GengarMega Gengar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Golurk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grumpig&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hitmonlee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ivysaur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kirlia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lanturn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Litwick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Magikarp&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marshtomp&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MewtwoMega Mewtwo X&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Murkrow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Omanyte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Phantump&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ponyta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qwilfish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhyperior&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sawk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seviper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Simisage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sneasel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Starly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Swinub&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togepi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TyranitarMega Tyranitar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Victini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Weezing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yveltal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Accelgor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arcanine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BanetteMega Banette&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BlastoiseMega Blastoise&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cacnea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cherrim&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Combee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DarmanitanZen Mode&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dodrio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dusknoir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Espurr&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florges&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gastly&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Goldeen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Groudon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Herdier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Igglybuff&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KeldeoOrdinary Forme&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lairon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lilligant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Machoke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maractus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Metang&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mudkip&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Numel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pelipper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Politoed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pyroar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reshiram&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samurott&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seismitoad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shuppet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slugma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Squirtle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swampert&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ThundurusTherian Forme&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tympole&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venusaur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Watchog&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Xerneas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amaura&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Axew&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bellsprout&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Budew&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chansey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Claydol&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crustle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dewott&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Druddigon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elgyem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flaaffy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GalladeMega Gallade&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GlalieMega Glalie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GourgeistSmall Size&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haxorus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Horsea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kabutops&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Krokorok&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leavanny&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lugia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manaphy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MeloettaPirouette Forme&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Minun&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nincada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panpour&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pikachu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PumpkabooAverage Size&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RayquazaMega Rayquaza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RotomMow Rotom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Scraggy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shellos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slaking&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spewpa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suicune&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Teddiursa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tranquill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vanillish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Voltorb&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wooper&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zweilous&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AbomasnowMega Abomasnow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ampharos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Azurill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bidoof&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Buneary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CharizardMega Charizard Y&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cleffa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cubone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DiancieMega Diancie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dunsparce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Empoleon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fletchinder&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Garchomp&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gliscor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Graveler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Heliolisk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Houndour&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kangaskhan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KyogrePrimal Kyogre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lickilicky&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luvdisc&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ManectricMega Manectric&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meowth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moltres&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noctowl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pinsir&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PumpkabooSuper Size&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Regirock&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sableye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seaking&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shiftry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slowbro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spinda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Surskit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tepig&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trevenant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vaporeon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wailmer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WormadamTrash Cloak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Altaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aurorus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beldum&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bronzong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Celebi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clauncher&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crobat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeoxysSpeed Forme&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drilbur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Electrode&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ferrothorn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabite&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Glaceon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GourgeistAverage Size&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haunter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoothoot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jynx&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kricketot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LatiosMega Latios&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LucarioMega Lucario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malamar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meganium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mime Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nidorina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pancham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pidove&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Probopass&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rattata&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RotomFrost Rotom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scolipede&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shelgon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Skrelp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solrock&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stunky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tangrowth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Totodile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ursaring&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Volcanion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wobbuffet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zorua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AegislashBlade Forme&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arceus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barbaracle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Blaziken&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cacturne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cherubi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Combusken&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darumaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Doduo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duskull&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Excadrill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flygon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gastrodon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Golduck&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GroudonPrimal Groudon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hippopotas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Illumise&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KeldeoResolute Forme&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lampent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lillipup&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Machop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mareep&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Metapod&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nuzleaf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Persian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poliwag&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quagsire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reuniclus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sentret&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sigilyph&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slurpuff&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stantler&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SwampertMega Swampert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timburr&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tynamo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VenusaurMega Venusaur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Weavile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yamask&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alakazam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Articuno&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beedrill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Braixen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cascoon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chingling&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crawdaunt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeoxysAttack Forme&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dratini&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Electabuzz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fennekin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Froslass&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Girafarig&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gothita&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GyaradosMega Gyarados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honedge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jolteon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Klinklang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lotad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Magneton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Medicham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mightyena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nidoqueen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pachirisu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PidgeotMega Pidgeot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Porygon-Z&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rampardos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roserade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SceptileMega Sceptile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ShayminLand Forme&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Skiploom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Snover&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SteelixMega Steelix&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taillow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TornadusIncarnate Forme&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Umbreon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Virizion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whismur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zekrom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AlakazamMega Alakazam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Audino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BeedrillMega Beedrill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Braviary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Castform&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cinccino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cresselia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeoxysDefense Forme&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Drifblim&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Electivire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Feraligatr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Furfrou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GiratinaAltered Forme&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gothitelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Happiny&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HoopaHoopa Confined&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joltik&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Koffing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LatiasMega Latias&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Loudred&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Magnezone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MedichamMega Medicham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milotic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nidoran♀&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palkia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pidgeotto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Primeape&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rapidash&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rotom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scizor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ShayminSky Forme&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Skitty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Snubbull&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stoutland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Talonflame&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TornadusTherian Forme&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unfezant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vivillon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wigglytuff&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zigzagoon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AltariaMega Altaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Avalugg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellossom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bronzor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chandelure&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clawitzer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Croconaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dewgong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Drowzee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elekid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finneon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gallade&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Glalie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GourgeistLarge Size&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hawlucha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hoppip&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kabuto&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kricketune&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leafeon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ludicolo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mamoswine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MeloettaAria Forme&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Minccino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nidorino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pangoro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pignite&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Psyduck&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rayquaza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RotomHeat Rotom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Scrafty&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shellder&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skuntank&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spearow&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudowoodo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tauros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Toxicroak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uxie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Volcarona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woobat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zubat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ambipom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Azelf&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bergmite&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buizel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charizard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clefable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cryogonal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dialga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ducklett&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emboar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flabébé&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Galvantula&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glameow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GourgeistSuper Size&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Heatmor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Houndoom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kadabra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Krookodile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ledian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lumineon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mandibuzz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MeowsticFemale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Misdreavus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ninetales&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pansage&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Piloswine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PumpkabooLarge Size&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Regice&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RotomWash Rotom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scyther&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shelmet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slakoth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spheal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sunflora&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tentacool&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trapinch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanillite&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vullaby&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WormadamPlant Cloak&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zygarde50\% Forme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aggron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armaldo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bayleef&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boldore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carnivine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chimchar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cottonee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delcatty&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dragonair&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eelektross&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Farfetch&apos;d&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frillish&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geodude&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goodra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulpin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hitmontop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jellicent&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Klang&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lapras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lombre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Magmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Masquerain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MewtwoMega Mewtwo Y&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Musharna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Omastar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Phione&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poochyena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raichu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riolu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sawsbuck&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sewaddle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Simisear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Snivy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Starmie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Swirlix&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togetic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyrantrum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Victreebel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Whimsicott&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zangoose&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AegislashShield Forme&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Archen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barboach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BlazikenMega Blaziken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Camerupt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chesnaught&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Conkeldurr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dedenne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Donphan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dustox&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Exeggcute&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Foongus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Genesect&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Golem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grovyle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hippowdon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Infernape&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kingdra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LandorusIncarnate Forme&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Linoone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Magby&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mew&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Munchlax&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Octillery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Petilil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poliwhirl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quilava&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rhydon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sandshrew&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serperior&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Silcoon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Smeargle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Staraptor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Swanna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tirtouga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Typhlosion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vespiquen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Weedle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yanma&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AmpharosMega Ampharos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bagon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Binacle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bunnelby&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charmander&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cloyster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyndaquil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Diggersby&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duosion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Entei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fletchling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GarchompMega Garchomp&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gloom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greninja&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Helioptile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huntail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KangaskhanMega Kangaskhan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kyurem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lickitung&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mankey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mesprit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monferno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Noibat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parasect&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PinsirMega Pinsir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pupitar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Registeel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SableyeMega Sableye&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sealeo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shinx&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SlowbroMega Slowbro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spiritomb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swablu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Terrakion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tropius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venipede&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wailord&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wurmple&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alomomola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AudinoMega Audino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beheeyem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Breloom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caterpie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clamperl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croagunk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeoxysNormal Forme&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drifloon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Electrike&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ferroseed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Furret&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GiratinaOrigin Forme&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gothorita&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hariyama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HoopaHoopa Unbound&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jumpluff&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Krabby&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latios&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lucario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Makuhita&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meditite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miltank&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nidoran♂&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palpitoad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pidgey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prinplup&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raticate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RotomFan Rotom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ScizorMega Scizor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shedinja&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Skorupi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Solosis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stunfisk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tangela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Torterra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Volbeat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wingull&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zoroark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AggronMega Aggron&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aromatisse&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beartic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bonsly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carracosta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chimecho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cradily&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delibird&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dragonite&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eevee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fearow&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Froakie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Goomy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gurdurr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ho-oh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jigglypuff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Klefki&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Larvesta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lopunny&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Magmortar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mawile&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mienfoo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Natu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Onix&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pichu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Porygon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raikou&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roggenrola&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scatterbug&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sharpedo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Skarmory&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Snorlax&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Staryu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swoobat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Torchic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyrogue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vigoroth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Whirlipede&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zapdos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Absol&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anorith&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltoy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bisharp&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burmy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charmeleon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cobalion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Darkrai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Diglett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Durant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escavalier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Floatzel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gardevoir&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gogoat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grimer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heracross&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hydreigon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Karrablast&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KyuremBlack Kyurem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liepard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mantine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Metagross&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mothim&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Noivern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Patrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Piplup&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Purrloin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Relicanth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Salamence&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seedot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shroomish&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slowking&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spoink&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swadloon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Throh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trubbish&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venomoth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Walrein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wynaut&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Generation:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Type 1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ghost&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Electric&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grass&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fighting&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bug&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Psychic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Water&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ground&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flying&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dragon&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='AtkXDef'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ataque e Defesa</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
          </datasources>
          <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
            <column datatype='integer' name='[Attack]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Defense]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[Legendary]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Legendary]' derivation='None' name='[none:Legendary:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Attack]' derivation='Sum' name='[sum:Attack:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defense]' derivation='Sum' name='[sum:Defense:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Generation:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Legendary:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]' value='Lendário'>
              <formatted-text>
                <run>Lendário</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' value='Tipo 1'>
              <formatted-text>
                <run>Tipo 1</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' value='Geração'>
              <formatted-text>
                <run>Geração</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' value='Nome'>
              <formatted-text>
                <run>Nome</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' />
              <color column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Attack:qk]</rows>
        <cols>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Defense:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Geração'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gerações</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
          </datasources>
          <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
            <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[none:Generation:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' value='Geração'>
              <formatted-text>
                <run>Geração</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' value='Geração&#10;'>
              <formatted-text>
                <run>Geração&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' value='Tipo&#10;'>
              <formatted-text>
                <run>Tipo&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' />
              <lod column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='SP'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SP Ataque e SP Defesa</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
          </datasources>
          <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
            <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[Legendary]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sp. Atk]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sp. Def]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Legendary]' derivation='None' name='[none:Legendary:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sp. Atk]' derivation='Sum' name='[sum:Sp. Atk:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sp. Def]' derivation='Sum' name='[sum:Sp. Def:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Generation:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Legendary:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Sp. Atk:qk]' field-type='quantitative' max='188' min='0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Sp. Def:qk]' field-type='quantitative' max='244' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Sp. Def:qk]' value='60' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' value='Nome'>
              <formatted-text>
                <run>Nome</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' value='Tipo&#10;'>
              <formatted-text>
                <run>Tipo&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' value='Geração'>
              <formatted-text>
                <run>Geração</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]' value='Lendário'>
              <formatted-text>
                <run>Lendário</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' />
              <color column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Sp. Def:qk]</rows>
        <cols>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Sp. Atk:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tipo 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Relações entre tipos</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
          </datasources>
          <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
            <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Type 2]' role='dimension' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type 2]' derivation='None' name='[none:Type 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[none:Generation:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 2:nk]'>
            <groupfilter function='level-members' level='[none:Type 2:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 2:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 2:nk]' value='Tipo 2'>
              <formatted-text>
                <run>Tipo 2</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Number of Records:qk]</rows>
        <cols>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 2:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tipos'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
          </datasources>
          <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
            <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column-instance column='[Type 1]' derivation='CountD' name='[ctd:Type 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[none:Generation:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' value='Tipo 1'>
              <formatted-text>
                <run>Tipo 1</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.01271h103hm17y0zzu53e0zf2tw0].[ctd:Type 1:qk]' />
              <text column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' />
              <text column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' />
              <color column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'>&lt;[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Type 1:&#9;</run>
                <run bold='true'>&lt;[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Por Pokémon</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
          </datasources>
          <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
            <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Generation:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Total:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Total:qk]' num-steps='10' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e2da</color>
                <color>#f3d3c3</color>
                <color>#f5c4ab</color>
                <color>#f6b493</color>
                <color>#f8a57c</color>
                <color>#f99563</color>
                <color>#fa854b</color>
                <color>#fc7532</color>
                <color>#fd6519</color>
                <color>#ff5500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' value='Tipo 1&#10;'>
              <formatted-text>
                <run>Tipo 1&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' value='Geração'>
              <formatted-text>
                <run>Geração</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Total:qk]' />
              <color column='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Total:qk]' />
              <text column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Total Geração'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Por geração</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
          </datasources>
          <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
            <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Generation:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Total:qk]</rows>
        <cols>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Total tipo'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Por tipo</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
          </datasources>
          <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
            <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Generation:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Total:qk]' />
              <text column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' />
              <color column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='VidaXVel'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vida e Velocidade</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
          </datasources>
          <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
            <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[HP]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Legendary]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Speed]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Legendary]' derivation='None' name='[none:Legendary:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[HP]' derivation='Sum' name='[sum:HP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speed]' derivation='Sum' name='[sum:Speed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Generation:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Legendary:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</column>
            <column>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Speed:qk]' max='180' min='5' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' />
              <color column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:HP:qk]</rows>
        <cols>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Speed:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Final' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dados sobre os Pokémons</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Dados individuais' captured-sheet='Pokemons' id='1' />
                  <story-point caption='Dados coletivos' captured-sheet='Gerações' id='2'>
                    <capturedDeltas>
                      <worksheet name='Geração'>
                        <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]'>
                          <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Tipo 2'>
                        <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]'>
                          <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Tipos'>
                        <filter class='categorical' column='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]'>
                          <groupfilter function='level-members' level='[none:Type 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Pontos totais' captured-sheet='Total pontos' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Gerações'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
      </datasources>
      <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
        <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
        <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
        <column aggregation='CountD' datatype='string' name='[Type 2]' role='dimension' type='nominal' />
        <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type 2]' derivation='None' name='[none:Type 2:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
                <zone h='61250' id='7' name='Tipos' w='41200' x='800' y='1000'>
                  <layout-cache fixed-size-w='190' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='36750' id='8' name='Tipos' pane-specification-id='0' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='color' w='41200' x='800' y='62250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='31625' id='9' name='Geração' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='66375' id='15' name='Tipo 2' w='41200' x='42000' y='32625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='10' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='12' mode='checkdropdown' name='Geração' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='132' h='17500' id='13' is-fixed='true' name='Geração' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' type='filter' w='16000' x='83200' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='97' h='13125' id='14' is-fixed='true' name='Geração' pane-specification-id='0' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' type='color' w='16000' x='83200' y='25000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51500' id='16' name='Tipo 2' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 2:nk]' type='filter' w='16000' x='83200' y='38125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pokemons'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
      </datasources>
      <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
        <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
        <column datatype='boolean' name='[Legendary]' role='dimension' type='nominal' />
        <column datatype='string' name='[Name]' role='dimension' type='nominal' />
        <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
        <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Legendary]' derivation='None' name='[none:Legendary:nk]' pivot='key' type='nominal' />
        <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='AtkXDef' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='SP' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='VidaXVel' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone fixed-size='520' h='66000' id='6' is-fixed='true' name='AtkXDef' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13500' id='7' mode='radiolist' name='AtkXDef' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]' type='filter' values='relevant' w='16000' x='83200' y='67000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='8' mode='checkdropdown' name='AtkXDef' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='filter' w='16000' x='83200' y='80500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='checkdropdown' name='AtkXDef' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' type='filter' w='16000' x='83200' y='87000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Total pontos'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Pokemon' name='federated.01271h103hm17y0zzu53e0zf2tw0' />
      </datasources>
      <datasource-dependencies datasource='federated.01271h103hm17y0zzu53e0zf2tw0'>
        <column aggregation='Sum' datatype='integer' name='[Generation]' role='dimension' type='ordinal' />
        <column aggregation='CountD' datatype='string' name='[Type 1]' role='dimension' type='nominal' />
        <column-instance column='[Generation]' derivation='None' name='[none:Generation:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='19' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
            <zone h='98000' id='17' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='48999' id='14' param='horz' type='layout-flow' w='82400' x='800' y='50001'>
                <zone h='48999' id='12' type='layout-basic' w='82400' x='800' y='50001'>
                  <zone h='48999' id='10' param='horz' type='layout-flow' w='82400' x='800' y='50001'>
                    <zone h='48999' id='8' type='layout-basic' w='82400' x='800' y='50001'>
                      <zone h='48999' id='6' param='horz' type='layout-flow' w='82400' x='800' y='50001'>
                        <zone h='48999' id='4' type='layout-basic' w='82400' x='800' y='50001'>
                          <zone h='48999' id='1' name='Total Geração' w='41200' x='800' y='50001'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='48999' id='3' name='Total tipo' w='41200' x='42000' y='50001'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='49001' id='16' name='Total' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='51750' id='15' name='Total Geração' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='filter' w='16000' x='83200' y='11000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='36250' id='20' name='Total' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' type='filter' w='16000' x='83200' y='62750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='10000' id='21' name='Total' pane-specification-id='0' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Total:qk]' type='color' w='16000' x='83200' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Pokemons'>
      <viewpoints>
        <viewpoint name='AtkXDef'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='VidaXVel'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Gerações'>
      <viewpoints>
        <viewpoint name='Geração' />
        <viewpoint name='Tipo 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Tipos'>
          <highlight>
            <color-one-way>
              <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='15' />
    </window>
    <window class='worksheet' name='Total Geração'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Total:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total tipo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='filter' />
            <card param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Total:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Total pontos'>
      <viewpoints>
        <viewpoint name='Total' />
        <viewpoint name='Total Geração'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total tipo' />
      </viewpoints>
      <active id='15' />
    </window>
    <window class='dashboard' name='Final'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='AtkXDef'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]' type='filter' />
            <card mode='radiolist' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[:Measure Names]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:qk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Attack:ok]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[sum:Defense:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Geração'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='checkdropdown' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='filter' />
            <card param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[:Measure Names]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[ctd:Type 1:qk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='SP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='3' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[:Measure Names]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:AdhocCluster:1:ok]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Attack:qk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Defense:qk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Legendary:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Sp. Atk:qk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Tipo 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 2:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Tipos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='VidaXVel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[:Measure Names]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Generation:ok]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Name:nk]</field>
            <field>[federated.01271h103hm17y0zzu53e0zf2tw0].[none:Type 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Final' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWXQk13nff7X0im50Y98xwOz7wuGAw0WURElcZFu2dJQTOpKlk8SS47zY
      5yR2XnISPSROHvLgPNiJGDnWseJItCiRGmXIMTnDZShus89wNs4CYDDYl+5G71tV5QFbL9Xo
      bqAbaKDr91K3bt1bdYGur+7/u6ugaZqGgUGVIq53AQwM1hPDAAyqGsMADKqaNAP42d/+NS/9
      8If83cu/QsnhGfgGL3Lyg5srfuDND05ycdC34vypvPJ/XuKlH77Ej/7u51nl/cnf/33a+ezE
      A958/3xJnmuweZB+8IMf/GDh5JOLV/ne97+PNTjAuYcJxNkH/OLE65gcjbTUOzh98lV+8/F5
      att34RZmefmVVzG7mqm3wz/87Kd8Nuxh745eAD58+yRvvfcJ3dt2MzlwnVdOvEFD2xYS3mE+
      uHyLu3fvs2v3Lm58+il3r59DdrVz9tSr3HroYde2LQhAYGaMl1/+OVHRTkejg1/+w8+4+tkw
      +/buQAA+On+R733v+8z2f0y8fh/3LrzF2x9eYeuOXdy+dYNDBw9w7tx5WhpcnHz9FI76Nnq7
      6njzxBu898FHRCMh3jpzlm279+IZvsPPXzmBvaENOTzJ2Y8v8t77H7Jt917uXPoNJ069TXNn
      L64a6/r8UgZlQVcC7dy3j5Ghh9TWN/PI4YOc/NVrfPqb/4fWeohvfPWLALz661N86zvf4d03
      fs3Q7cs8nIXujpb5O8R5+52P2LptGyYpzsm3zvPdb7/Iydd+AcDuw8c5vrWGUx/e4N1Tr+Ha
      cpjRy//IjFCH/945Lt6fAeCVX7zG11/8Nvc+fpP+/tvcfDhLT3fHYjkjnlFe+uFLnL8fpGb2
      Ov0hF19/9ji/ePXXqLEQP/+/f0dtay9v/PJl7C09XHvvBKOBEHcGvHzjmUNcGw7y5K5GLtwY
      5rWTb/Ht736bN0++hm9sgKDUyDOH2jh/Y5i3zrxN79ZtWM1yGX8Kg/UgywA0VeHkr0/xyCMH
      efmnPyUWj6MoGrFYDKvVSigYmku3lIP6ngN86+tf5p0TvyYMgMA//94fo3nu8/7le4upF1pc
      a2ocRKNRzGYzDe3bOLCjCyWZJBFPsO3AUZod2S+atb6Hf/mtr3PxnRNMzj0EW3073/+j7/Pn
      //ZPsEkpGmj+OZqiEI3FUZIJEkmFI33HsUgCdfUNWK0WGhsasZhNaGTnbWltxWqZ+9r//nf/
      kCZrmNdPf7KS/7FBBZMmgQKTD3jz3Q/ZfvTzHNvbg01WuD04yeHDB3nsiae59N7rTEUEdu7c
      xZFdXfzilyd46iu/RZ1F441Tp9h68Bh7ejoBjY/eOc1oWOL5L32BzgYTr548zQtf+wZul5sr
      H53GJzTx1c8fRQBaWlvo6N3JyJ2rjHkiHDx4AKtZYntPJ6/+4pfsPPZFeptsnHrjFA1bD3J0
      Tw/CfJnb2toBsNe3ERq9wQdX+vnGN34Pi8XCl559joHPrvOFL32ZG5c+IZCQObhvD7Io09La
      gGi201TnxOqs58C2Fn756km++MLXaHQ5sDrrcNWYMdtdPLx1nmv9Hn77q89SYzWt+Y9kUD4E
      oyPMoJoxmkENqhrDAAyqGsMADKoawwAMqhqjYTsHkUiESCSy3sXIwmazVWS5ADwez3oXIYvt
      27cve92oAQyqGsMADKoawwAKYGRogKGRsbS42dnZtPNkLEpSTb8ejUYBSESjKDp51GSMWGqm
      MpQrnRiembme/HA4jJKIklBW/PicXLnwIReupg+Y9Pp0BkBGvXijiyd4F07UOIFQvPQF08Hw
      AQrAancSTya5f/tToqIZsyaRVGJ4JkeJYUKQLLTaTHhJEg1GcVplIkkBh0UkmUgSiYvUOGVm
      /REi4QgIKqMPBqirc6NY3ITDEQ7uWV6rrrRcTU4TEUUiMjuNxWklMBXh1mchmpuc1JrNhOQa
      bCaBiN+LZLYyNjTKkScex7KKT2MsEsVkiXPm1BlqbQozsSQhzcG+FhsjgSiEwkRMTp7oNXPJ
      50Ke7ke2QzDaRHT6Ks09PSQTDkZmPPz+7z238oIUgGEABaAkooiyjdq6BhyShUQ4iM3uwh8M
      0+quJZ4Ei8VEnSRickE05EfUZBw2K5FohPp6G3ElTlIRkQQVRTTR3N6F3WICswO7xVy2cjlq
      TERmIzgcDiwOJzWyE3s0hrvWippQaXfXEvDHcDgcSGY7Hd0grHJswK79R3DXubkaP0djYyt7
      GmqZ9kVBieOIjNK6dy+BSJz6rhaaohOIzXU0dPQwNTqN2HiQ2joXCHYcrprVFaQAjKEQOTBa
      gYrHaAUyMNhgGAZgUNUYBmBQ1RgGYFDVGAZgUNUYBmBQ1RgGYFDVGAZgUNUYBmBQ1RgGYFDV
      GGOBciDLMjabbb2LkUWllgugvr5+vYtQNMZYIIOqxpBABlWNYQAGVY1hAAZVjWEABlWNYQAG
      VY1hAAZVjWEABlWNYQAGVU3JDWDWn74ujXdqgpiy8rVvDAzKia4BnD51ggsXLnDqrXdzZhy8
      eIaT713k5ImTRFLe7+s30xdEmpkNYJGMisagMtEdCyRZajh69BFOnz7DtYsfE1VE4siEpodx
      NXXTd+wwAPsOHWXq8pvcu30Tny9AJBqjxm5iuP8WvqSN2dH7SLKAZq7j03NvIikaDb27CYeC
      NDlkEpqMIloITA/T2NxCKC7yueOPrOk/wKC60f00K7EQly5doe/xz+GLJOjr60OLh3HUNXP8
      2OHFTDeuXqRj3zHCvmn6HuvDZhYhEeHmnUFaWluYmJzEZHOiJSO0dPawo7ON7QcfwWmTCMaS
      9PX1kYwGqHE18MgjjyJqa7McnoHBArqD4QYG+unt3QqAf2ac2/eHaN+yDTUeoburEwDfaD/U
      b8VtBSUe4sKl67ib27CZBbo7O7lz9x42GSY9frq37iASmsWmJrG19+IdH8Jhlrg7OEpn7w6S
      0SDdXZ0MPRxevL+BwVpgjAY1qGoM79SgqjEMwKCqMQzAoKrJPSXy3R/D1GBWtNq5F2aGs9O3
      7QJf+mYNuNuy4wCtZRv4p9Ija5t047RELCu/4KhHC3pWHZd5Pde1coQ38vPE1u2IbcXvZ1CJ
      LG8AN9/LitaOfxPufJyd/ujvoA1cTosSeo9kxQFoh55Fe5jeYSZ07dWNU0PZO54IrdvRxu+t
      Oi7zeq5r5Qhv5Odx5PlNYwCGBDKoakq3KkTbToRC4gCaerKihBxxgjOUFS/Wd5A5uqiYOCWj
      VjCoXnIbQM9h3Wihcx+6HQdjd7IlEOhLoNqmLLkD6MfpSCAVsqRNMXEGBgvkNoDBK/o+QG1T
      Th9goyC0zulXwVEPrdsRzDa0eCTtHLNt1WFIr4VSw6W8VyHhUt5XcGy89X9yUfELYy28rKms
      WgLNG/ZiTTbv4KWdD326+jDptVBajVTCexUSLuV9tU3iAMMKDCCnBCqTD6AOXs2KNySQQako
      2gfQhm/oSyBnU1l8gHKQWasYjnH1UrQPwPFvlrE4a4NRKxgsYDSDLjwrpVYQzDaE7X2oSmLO
      WbQ5Eey1kEwUFdbCfjDbEBo6Vh+G0t0r476CuwXN5iw4jLs16/+3USmdD7CBmkF1JVBKbafN
      p1Fj4aU0shl1+mFxYd/EXLixqyThUt4r7b4pZS0kLEazP0obldL5ABuoGdSQQAYLVLwPUJZm
      0DwSaDHd2N3iC2ywoah4H6AczaD5JNBCOoPNT8X7AOWgUAkkNnYtnZgsSN370cKz6xcGBFfz
      4gjG1HBqulxpSha21xbyb94QVLwPsJ4SKJEhgcTGriUnd73CoBtOTZcrTcnCjd1Z/7+NSul8
      gA0kgfQwHOPqpHQ+wAaSQIX2BKdJIOZkAClfXIONT+l8gDJRzsFwC+RyjLMkUOHFNtggVI4P
      YKlB6NqbFlWJEii1VhAbuxBczWizk2UPS9uOos1OAuQMpzqq0s7jqIkYGiC17UANeosOC446
      BGfj3L1Tw3XV0BO81j6ApQb13vmcxSklq5FAyv2L6Wkos8M5Hy46n2xBjUUWy6n6JlcU1ovT
      3C1sFiqnGbQrK9ncPQwJZFBGijaAtW4GzZQmUDkSCECwuwDDMd6oFO0D5KRMzaCEsn2A1VJS
      CdRmWUxXzg6oovPVNiLOr6kkOuqWyltEONd1wVrDZiGnASieERi/n32htkk/wwZqBi10eERB
      EkgDZWEHHM/4XDp3M0pGWHQ3z2noFYaLvsfUw8Ww6ptciqdwHyBXPsMHKEdJcj1vjXqCVyWB
      UpxNg41F5fgAa9gMWlIJZHUgupvT08nmrHsZVCY5DaDoL/0GagYtqQRKJlBD/vR0GQZhULnk
      NICcX/qdx/UzbKRm0DJLIMHqQHQvhaVGM8hmRPd87bBMWGo0oyXji/lSwyvNpyXji05svuuQ
      3yGuCic4F2XzATaRBCIZT3Eo5x3J6bkVtfOFl5zOyezwSvOlObH5rpMzbDjBLFMz/Pa/qQoJ
      lGUUZjuKdzw9nSGBNgyl8wGqRAKpGaNBRdmSXeYUCQRz8iH1i2pQOZTOBygT5egJLunCWLIJ
      cWG5kAXSJND8M+ZrhZV2Pq02XymvGz5AOUqSwwcoR09woUahJaLp5UmdgrgQV6AEytTRQude
      4iEfkqMRJeSDUADJ0Ug85ANBRqpx617PDEtIKIJc1PXFOFjRdXETjYoqWgKttQ+wnhIodV0g
      yJ6CCIYE2uhUfDPoZpNACxibM1cGhgRibSXQYj5HY3GFNigLFd8MWvESSKcfINVhXDjPqhFs
      jsWwVONGtDlQI0FMjZ2okSDAYlgvLjV/odfzxS2E9eJSw4LZymah4ptBK14C6QyFgOwvfqaR
      qJHgnMOawsJ5anyxcaW6z3L3lhwpDs4Gp3KaQddZAumh1xOcJYEKHA2aaRCSTi1osPYU7wNs
      OYym0/KhK3fq2kCnBtCd/FKGnmAhZR+sBVa1MBalk0CZNYBUs3m+qhuJ4n0AzwiazkQZwVab
      LYGsToTeI1lp1anBNekJxmxL2wsLyrA26AolUKa8XNTa0lwfgGC2oilJ5LpWNCVZWFw8CpK8
      eH25uNTnFRSH4QMUTzSg6wNw6NnsuDIMhsv8+i9Qbgmk1w+QHP4sLU2mBMqqEXDP6e0a92J8
      wXE1hcVlXssXtxCubh+gXPsAxEJrNiVSlx2PpZ+7mlGXWQJlMS7vaFB9Ml94U2Nn0UU2WD3F
      L42Yq2lztRNiapvRyDaAtWoGzXqxdYqtS4ETYvJJIMMnWB+KNwCd5k7Qb/LcUM2gOpthrKUE
      ynp2it6WcIMkI0gyktQ4d1xJHO5l2/oLjTN8gHKwzs2gxa4CtxhXoATK1w+QKYEWr89vxyXV
      uEn6pxePK4lbYLV9AtXtA+j1+ELZmkE3iwTK1w9gSKD1obwSqATNoJtFAhXbD5AqPeYSlG4l
      e4MlKr4ZdLNKoJz9AAtlyjAQua51zkiK6CfI6gfI09Zv+AApVEozaLVKoEyfQFOSRfcT6PUD
      wPJt/YYPkI81bgateAmUsgbnYr4VDIXI6QTPY/gE5aFymkG3b1AJlLEO/+I9i5RA+Qwiyycw
      KAmV0wy6QSTQStcGLXY06HLDpSHFQBZ8Amc9mqYhzx9FmxPBbEO0ORFlU0FxC0dg+Ti7K+/f
      u1GonGbQDSKBClkYqxQSKJPFDrEc+UVnA0o8imSxocTnZ7KpCoqigGwuLG7hmCdO0jbPHppl
      lUA46tH0WnyKaAYtB6uRQFmscDSokKfVJ58TnHVdr2wGeSlv43IshDa/hF8qmVofALsb9n4+
      PV19h+4+ZYKjPmukp+Coz3oJipkPsNYSSFhYwmSeYp1gvRrAoHgqxweIR9BmH6RF6cmVxbQZ
      L7HQfSA7bTHzAcosgTIptRMszrfNC6KEXFOLlkwshlHVZeP08i7EiSlt/otxkmnZsmwkyusD
      tG5HsNVmJdX1AVxNMJs9hFjPB9Ab56/pGEUx8wHKLYHK5gQvpI9HUeZrIsliywrni9PLm3lc
      CEtW+7Jl30iU1wcwWXQlEOhsh2R3l3ayepGUUgKtZCjEap1guaFj6Xlma9pLa5CbDSmBVtsM
      qts0WkIJpDsUIuNexUqgfE5wag1gUDgbUgKtthm03BJIbyhEcqEpcR5ThqbPNxaoWCdYstiW
      nuWsQ41HF496cQvHVM2f61pV+AA5MSRQ2nmhEohQIP15RWr8Qp3ghXAi4E2/dw49v9wx17Xq
      9gHKxSaXQFLGUoj5XujVOMGQXgMIssnYyTIHleMD5GCzSKDMlzkzrtROcGoNIIsSksWm36SZ
      47hsmmqQQJXiA6wVK5ZABY4GzZRAWc8vsROcWgMgiiiRYFpTZyLgXTwukCZzlrtW1RJojX0A
      vVEnayWB9FjpaNDVSqBineA0Y1j2SdVN5UigHD7AekqgrLH/rmbIMIBCKVYCZRpIsU5wqgEI
      8xIo9dxgDkMCzaMngfTiViqBpDzf4XxOb+b5SiTQAnJNLZLFNjf0wVmHKpoQZRnN6gRRRLa7
      0ADZ7kJV1cVrC0fBUgVTInNiSKD0vAVKoIU9txYotpmzFE7wUmZ1yR+ocaNIEiCiCBJoIEnS
      3LBnSULRlKVr80dZqII9wtacTS6BMim2mTPTCZbbd6ZtzbSSGgBAkCvnFVgPKscHWGfWWgKt
      2glOnahC9qopqcawbA1gsiBZrIiiiCAIaJqGJM2VNddREHRF8IakcnyApu6stOWSQKvpXS6V
      BILVOcGZS5Potd8vRaTXAGnGoIGiKEuSZ96oljvKm6jWqBwfQLagZTjB5ZJAK94QbxU7xOSj
      WCdYdDZkDX7TG8IA2TVAmrGYTGlfeCVjzNJmZ/OYchGseEM8vbgCJ8Tkk0DFOsFZC2st0wyq
      qUpuY5EtKNX5GgAr8QGKWReoBBJorQbDrZgCJ8Tkk0CZ53md4JRWH1jeCc6URKnnmU5wam1g
      +AB6PoCzaU0l0FoNhluxBCpRP0AmeZ3g5Vp9YFl5lHq+4ATD3Asej8fT0xk+wPqyVs2gK5ZA
      ZeoHKKUTnDkaVJBNi+YoSHLaXIWFrzyAKIqb3icorwRyt4HeqhAV2BO81hTr9Gaer8YJ1sx2
      kqa5X0uWZSRt7pfOdIIFQUCSJARBwGSaW0jLZDIZEqiYdYH0lkDR9NYFWuee4LWWQMV+8Yut
      AZZzgkWrE4S58mialvbSZ37xF85Te4dF0egJLoxi1gVa557gtZZAUNwXP/M8Xw2wrBMsyywM
      +E6VPKnhzPPNKocq3gcwWBnLGYdmdc6P7Zm/VkANsFkRNE3TlfrawxsQyW7ew9EA0WB2vNWR
      HW+vRcuQBwBY7JDxxcXqgGQiPc5sg7hOJ5Ne/CrjNDX9hxZMlqyy68aZbWgZa2UKsgkt5W8R
      ZBNapockyaAkV35utqGpS88VRHHxPDWse55SnoXhD5nhXNcEQUAQhE0jg3IagIFBNbA5zNjA
      YIUYBmBQ1RgGYFDVGAZgUNUYBmBQ1egawOlTJ7hw4QKn3nq3pA/TlCjnPv6E/qHRkt63mijk
      twmOf8YDTxySUaa8y69HVO3odoRJlhqOHn2E06fPcO3ix0QVkTgyoelhXE3d9B07zNBnnzLs
      CeOZDbKzzYUvpqKJVvyTg7iautne3cTgwxESWBGjM0gWBzt27USQZe7d7yfhG8MbVYjG4QtP
      9a31371hKeS3edh/h1shD/XHurjXn+Ti6JvUN7Uh1TQSnn6AxWbHXt/J/p1b1vvPWXd0awAl
      FuLSpSv0Pf45fJEEfX19aPEwjrpmjh87jAiMTvl4/PhjNLjsjI5NYJIkZFlYTDM4MABIeGc8
      JDQTjx47hnfkAXFVxTfjZcoX4bG+PmQtrlcEgxwU8tu0tbeza/9hnNa575u7sZW+x/oIeqfR
      TFb6HuvDOzW2vn9IhaDbETYw0E9v71YA/DPj3L4/RPuWbajxCN1dc8N4o4EZLt24z9jUDM9/
      7lGu331AQ1MrZgm6uzoZHrjLlC+EtcaF26px5uyHPPfsV+h/MIIomTiwvZ0rt+/T2r6Fns6W
      tf2rNzCF/DZaIszHF66x/8BufH64ceEMdS2d7D10FN9YP2NTPvYcfGTRQKqZFfcEe6fGuP9g
      BHdjG9t7OpZPnIhw4WY/jx7at5JHGayS4YdDdHZ1r3cxKhJjKIRBVWM0gxpUNYYBGFQ1m94L
      mp2ZYCaksLW7fb2LsnnRNFR/GG0mgBaOgaKCLCE4bYhNtQg2y3qXMCeb3gc48/abNNZ3YDcr
      yHY7o0NjNLR24vPP4rYJWGtqCYUjXDx3mX2HD+I0qWCrxTf2kJaevWzpaMz/kCpGC0RQ7o6g
      +XMvDiY0u5G2tyGYK+97u+kN4K03fk04acEzfIOdhw4jajY+vXKThNXG3t3dxKaGGI9ZabVJ
      2OqaUcIesFuxyxbAyvHHj673n1CxqJM+lFvDUMgrZJGRD/Yi1FTW0uqb3gAMyoPqC6JcHche
      om45LDLy0R0VVROUxQlWVb21HAw2C5qqotweKe7lB4glUe5VVg90WQzAqFQ2N9qED6IrG8Ki
      TfrQIjrzxNcJoxnUoGjUKZ3FEtYwfympHDG2AQlG4gyMZW9+p0dvmxuHzVzmEq0NWiC7xefT
      z66gWus5tGVpyMWM30dDrTsrrRasnE27y2oA/aNeQtFE3nQ1VhNb2+vypqs0BsZ8/PsfvV1Q
      2v/0h89wYGv2BtobkmQyK8rjn0WNiXxybRzZbMYTVDGLcbo6trO1JaMpOVE5aw2V1QD+5uRl
      rg/kX+9zf28z//l7z6z6eRPeEJPeUEFpN83LuB5IIiTTGzq2dW/FH1EI+KPzawdBR1sHkWhY
      P3+FsKkk0NuXBvjZmesFpf3VX7xY5tJsAoJBmJyAeBzsdmhtA7MZwW5F86e/2J0tC3un9eS9
      rWCf6xmOBSPMPJgkFowiW0zUdTbgaHSV+I9Ynk1lAAYlIhKGjz+Cgf70eEmG/QcQ6juzDKAY
      4maZGy+/z+ing1kthvXdTez/rWPUdebvgVcSCoERL+FJP7HZCMlYEjQN0SxjcVqxNTpwdtRh
      rsk9FMMwAIN0gkE4eQJCOlJSScLVy4hNo6i1vcX3AwCheJJP/v4dojmGTniGpvjNS6d45JtP
      0XGwRzdNIhxn6sYIvoFpNEWvzylG1BNi9sEM4xcf4Gh307y/A1tD9jZUhgEYLKFp8N7b+i9/
      CsLUBJJgRXG0FXV7VdW4fPl+zpd/MZ2icumV32Cvd6TXBBp4708yfvkBarLwztbgqI/gqI/6
      nS20HO5GTPFBKscbMVh/RkdhYqKgpOLMCGKzM3/CBQS4P+nFX6B0UhWV6yfPL55rmsbohQFG
      zw8U9fKn4rkzweCZW3NSaR7DAAyWGEnf+2A6qLMK+AJKEskhIO5oz9+qYzUjHerl4WBxOwB5
      hqYITvtBg7ELg3jvrX4HochMkAfv3kadb4o1JJDBEuH0r/NMKMiUdwYNeO3qdf7gmefosstp
      6aXdWxCbXKhjHqaGB/AEZ5AEgSZrE7XuRsQmF0KLi2ggSjSlA81aV4vNLuGfDKAkUvsVZKy1
      IlH/3FAL7/A0CV+0JC//AlFPiNHzA3Q+sd0wAIMUzOk91XazmVAihqJqHN66HZcsZKUPRP28
      fvME7/e/gyc8k3Z5S10vX7I8xxdavkwylt4hKptNCIJG6/4tRGcjuButRBUziZkA8eTsogFE
      fSGCd9PvWwpmH8zg2tKwcgOIBn0MTwdw2yQiioTbWUMiEae+vr6U5TQoE5qmoc7OoiUVJLdr
      br/g5ha4fWsxTVddPdTN/Z77de5xJTHC//jVDwjE9Fefe+Ad4H9/8j85fecU/7rvT9OuKckk
      Uo2F0EwQARXvSATBZifqCyKYlnqKA0NeLKbyzCibuPpw5QYwMjpGEjMR2Qyawt1Pb9F94AlU
      VUVVVTRNK3hUqKZpJHW614ulmGHYpXle4V36qqqs6pml2ps3MT6O/1cniJw/jxqcb+0xmbDu
      30ftC89jrXFAaBntP895q5f/fu4vUbX8//Mh7yB/8d5/5Jnaz2Hxz9UykZlZIlkfdm/6qQCy
      WD6REpuNrNwAGhrqGR71oFoEEqrMlp37iPo9iM5WNE1b3F6zEARBKMkPXMy2PaV5XuGbX4ui
      tO4bTIfe/w2el/4XWiJjfFYiQfTyFaKXr+A8cgh3UwPCMo38k1KUv06eQ9Xdw1Mff3SWd+ve
      5yv+LyIW2PZS2+DO2riv1Kz4F3E3tOBuMFZ02yiEz51n5q/+Om+6wOWrcOQwdT1d+jVBSys/
      Ey8Smyq+NvNZZxmof8A2T2/etNZaO1sObiMymb82Wg2GE1wFKMEgnh++VHD6wOUr2F54Hqvd
      lj4WqKMLf4ODcz//8YrLMrpliuP1TzC1zMwwe52Dx/7gGWaujaz4OYViGEAVEHrnXdQ8vbuZ
      +N84hfXf/Tls35EWf/vBh6jagu+TKZPyS97R8DD7X+zDc32CgY9u459Ymk9hddroemQ7Oz63
      D5PNzETswTJ3muPhxAiT3ilaG1roaGoDovgC4HYWNvneMADgp2eub+pRpJGrV4vOE7t+Ay2p
      IMjpGnwikN5TfKTrSUYD06jhz5iKzxuE7KKWWfxJsJtqCCcWjG/OQKZCk2w7thPbtnYu3niI
      byZIT2c9xw73YEp9XgGNKJGIh1AozmxNlGvvvoJqd2IS25idukRPRy8+Uydf2bMtZ37DAKoA
      ZXIKAMv+Q2hhL4kpP6JZQrSaSHp8gIDU2ILqHUdq3g3xfhLDfpRZH3JDQ9q9lr7+c1hkK6Jk
      Y2vTAZ6u28JdzxQhzUSDMoho344vNIbF0sDQ1FW883tDR+Nx/urV87x14f7SO37uPs1v3+RP
      vvkY++fnaohmGVh+/rDT7KB93xYmZxP0dO3C6qwn6A/R5T6Cy+lmR93yeyAYBlANLHxVlThS
      YzOCzYGmagiigKnGgWAyocViiDuOwsQQ2nwjjaDTAlNnT+/n8Ud9JOMzDMaj+AO/zKEAAAd/
      SURBVBNxZuNJYskIkkVmfPwykijjyGgt/snr97jVnz0gbtIX4gc/fpf/8v0vs6OzHovTStSz
      vHRra59zqB1WoGXeWIuY62QYQBVg6uggOTpGfHgc2WUhOeVFQ8LUWIsa0xCIowTCwChyewfJ
      0RCiowbRlT05ZWfTnpQzgZtjlxbPxgLTi+GplMYbb9izGNaSdm71h8nlLySSKn9z8hL/9Y++
      jK3RweyD0vcCp2IMhqsC7H1zW1BpAS+J4XG0WAxiYRIj4yjTEySnvWixGFosSmLgPlpMwXbs
      mG4/TmttGzuadq+4LFqgFxDY2tlIu9sGzM0JT+XWg2m8gSjOjvLPEzcMYBOhqCqjfh/Xx0a4
      NDzE9bERRv0+rMcfQ+4ofHFgwWSi9ne/hqZBJKHgCSfwRpLE5yef/NMj31pR+ZwWJ701TwLg
      rrGgChK/98w+tjfZ6GlvYN/WJnqaHEiANxDBXGPB0Z69qkSpkCyyIYE2A75ImI8f9HNzYoyY
      znALiyyz46vPsu1nr+AI5OlYEgTk7/4LLsXsDF2bIpxI7+1122R667fy/J5vcOrWLwsuoyiI
      /PFTf8pHFzRu9vsZnfQxHdUYm/BjM4tMeKIMjkZ4cl8rg1NB6pxztUPz/g6Co4UtPVMsjXvb
      DQPYyGiaxrmhQc723yG5zDioWDLJdeDWN3+HQxeusPvTW/oK3F7Dg699iwH3brQp/VlbvkiS
      yyNBzPLzHOpIcnXkRN5yWmUrf/zUn3K44yhExjn1yT3G51fv+OTG0hBsi9XC1bvj7NnSSN18
      O76twUH9zhY8dwqbqFMo1jo7DTtbDQPYqGiaxhu3r3N1dLjgPIosc+n4owR7tvD0+DSJkRFQ
      FKSmJkwHDnKu6zATamGLd8UVjVbXb9Hp3sudyde4O3U7K02NptKXCPOcvZHGSz8hcvMEe9sO
      8fg2Jx/dzx5BGovGUGWR77ywj8HAPYKJABbJSuu+diIzISIzpRkWIVlkup7cgSAKhgFsVN4f
      uFfUy5/KndYmmh5/nKe3zvXyaprGe/2zTHiLX7MzqfXy4tH/QJ11ljtTt/CGPUiCRF3/O+wZ
      OItJTUJgnIWW0OStE/wr0UpD7Zc4GTiS1tdV77Lw2NNRTvt/RMK3NGBPQGBb7y564j3IgdUN
      jpMsMlu+sBvzfA1jGMAGZNTv48OBe6u6x4cD99je2ER7rZsBT5QHK3j5F7jwMMDv7mvi6W1z
      k+SjZ/8bifu5V8yT1CgvWk7y3B47dzr+gEgsQXODlTvCPzIZGyZzkKmGxr3IbUa6h3hq5gtI
      44WNMs7EWmen68kdiy8/VKgBbPahCavlvft3VrIiSRra/H1ePHyMy6PFjRPKRNXg2liIp3pd
      JG6/TuLijwvKV9f/cz6/6ximR7/KPz58lUnv8jVahDAX28/x9R3/jOlro8RmC1tjVLLINO5t
      p2FnK4KYbjwVaQAGufFFwgx6StM5NOiZ4bOpWYKx1a/VOeiNcrzLQeyDvywqX+yDv8S/5SjX
      vVcKSu+JTfOgcYCDLzxKaMKPf2iG0GSAeDCaNjZPtpmwNzpxdtZR21mHKOtLJ8MANhj9M9P5
      ExXBJ0PjwOo7nBQVxu9dwOUfLSqf5h/lzmcvg1h4nXZ39haHGo7haHXhaJ3rrVYVFSU+tzKc
      ZJIRTYX5Cst2hIV9U5w9e5azZz9Gb43nwcFBpidGeTg6QSAQxOPx6KQyKCVTIf35t6Axcf8u
      0VhxE1XC8dwvXmRikGsXzzIzk+uZ6fiGb6ad+31x3roXYiSwVMPEggky59KExosbreqLZ9eA
      oiRispkx2S0Fv/yQpwawu5twWq5x9p3bPPr0cVI7rL1TowQjSWRZKvmc4JXO7V37fGs/JziS
      OZ1xHt/DITTJTGhynKmEhpwMYXW48Aej2E0KZncLrrrshawEIfc3UIlGSKoqozc/JdHkwkeM
      wJiXY1/8km76ZDyaca5xdLudu3eD/O3ZCJ/f76BeVbkSjvHiXgfSvBwXleJ2mxGF0k2TzCuB
      6lu2c6wvexanqkE44MNhrSdJaecEr3Ru79rnW/s5wVKOF9ZstTA1PIlVjeLY8yh3Tv4Dzo5O
      piaCdLU7ICbrGoCm5TZis6sOy7SH5p4OJh4+xGSJ4vXl3t3F6m5NO7fViHx8L8zeFiuf1wS6
      68y0m8EW0UhqGtL8+1FbtxN0NYY+TdbSTcXN84sk+OjMm3hFJ8czrjQ0t9PQbGw+vda4bDbd
      eHtTKzuall7Ax/5JYa1jsriMAbhb2Xd07p5NXXPj6ncts2tsw47jcE6E+ZUibDUmvrh9Tje0
      1C7ph62pk7UEkT37vsOHD39CQi2sJthff6SgdIWQ59NnYtue3WxpcOWZlmCwVnS6Sjs47GgB
      y5AXgk0WaWhsRd71QlH55F0vUOPawhMthW2Qsq12Fz3OHfkTFvr85S5O9Q+y9/EnESJx9L87
      BithNXuLbalrwGYy5fQFisFmMnGovYWJoI/J4Orut6PJhigIWJ7+M5Thi2jB8bx5BEcrlqf/
      DICjjY8TSga4MPVBzvTdjl5e6PomQgFzjwvl/wMbIG4prsUoWwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Gerações' width='192'>
      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
      2/n/ARyE0g1y0UHMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pokemons' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZ30lEQVR4nO2dWXMc13XH/+d2zwbMYAAM9oXgBogEJVGWZW2MF9mWE1dsJ5XNlapUHvyS
      POQlVVm+QT5FnuLXJA+u+CWrZZcrdrzKlkhKlCiKBAgQJEjswGBm+uRhAJokGppzht3T3dP3
      V8UHoU/fvhRxZvr+z0bMzLBYUoqJegMWS5RYB7CkGusAllRjHcCSalzfn/7XPwLv/VC30oU3
      4N14W3fP4CRQHACvLopvoTOfBn/4M91zzn8WfOsdobEBTZ0HL7wrNHdBJy/Cu3NdZu9kYCqT
      8FZuyJYfn4W3dE22ttLeDM/Au78ENPaPXhuaBq/fBdf2jlyjwUlg6wF4f+fotYFxYHcTvLd1
      9Fp5FNjfBe9uqPYd5jV/B7jyA+D7/+R76VgyefDP/k13z/QF8OA0IP7lBJDJgX/+Xd1zyqPw
      3vmezJYIxhi5vZMBFUrwrv2fzD6TA2pVeB/+VLy+eG2tfaMOb+EysH/0lxy1KrzlDwGfX2Qz
      fQHe6gKws37kGk2eA6+vAFv3j14bnwV21pvXNfsO8Zp9BbKkGusAllRjHcCSaqwDWFKNdQBL
      qvFXgToIDU74ymnH2peGwKOndc8oDoAq0zJjY0DFQbm968KMzwJORrYXx23KiJmcbDtjZ2T7
      aMPeDJ1oqkApJlAHoJe+obuhMgUmByj0ye/J5nX2QPOXrVCU2RLp7I0Lb+maSgY1J56Ty6AA
      vKu6mIzY/vSuat1uxN8BnvsikO/VrXT+s+B/+QcAiuTSyfPgnn5VHIBHTwM3fqnaGp96Ebxw
      RWZMBB6YkNs7GdD4WdV+LPHB3wF+/d/6QBgzsLOmu2dvE+jp191jsQRI5GcAS7Q4c6+C67Uj
      PzeDE6BSBVyr/uaHZAD2YAbGQAPj4P3dI9eoPAoMTYOrO0ev9Q03UyEeRpcJIADMMCOnntgB
      NV9H2fO59shenvKadYCU03j/R76pEJ6PrTl3Cd7VH37iNT+OvVYcBJVHwItXj17vKcMMTcO7
      +Y7vvQ/38pTXrAxqSTX2GyAArAyaXCJ3ADr1AlAckNuPnQXOf1b3kOEZ0JnPCB9AoOkLMEb4
      5WgcK4MmmGAdoKcfKhk0XwRWboAXr8rvGTkllygPmbkIvvOBzJYMuKcP3q/+U2bvZEAvfU23
      H0tsCDYQNv853Q2VKXjL14HNe/J79rZ09gBQ3QG2HshsiXRrWxJNsIGwb/+d7p7pC8CgMOXA
      EgrHyaB+UKEU8m46T7CBMEviOE4G9cOcuxTybjqPlUEtqSZyFagboGwP0CNL0CM3BzMxJ5dB
      R07Cu/lrxV4K4r0g2yNet1uxDhAAVBqEGTohM3Yy8G6/L5ZByTjytdFM/ZbaU19FvC4AUE8Z
      NPmM7zXTPwpWXqNCH6i3H56Pcki5XlDfMKjhfz5p53l+1yJ3AHPhC+CJObE9nXxB/5DpeRix
      uEOgyXO6OMDqArybwozWgziAFPYa8rUBoKcstjduVr4uANT2wBv+Clz93bce+29n7jXUD1rF
      eAtXAXKaF8jAmZhDY/EqsLfd/HN4DYAzPY/GrYNOFfdu+V97Yk1nfBaNlRvAgbM8es2MnWl2
      sDjIaXrs2sjJ6B3Ae/d7urYoAPjH/6p7SE8/vLf/XWZLBOM1bBzAB65Vgc1VmW11G7ztkx1M
      Blzd8b8GtHXt4c/9vi32tsHb64BPfyPe2w44DvDan+huGJwALyiCYJbAMadf8m2M5QflhUVC
      CSJQB+CffgeqSPDUPNA3GuQWLEq8j98G9mUpEWbu1ZB303mCfQXy+Zr5ROqyTx5LiDRqQKMu
      s+3CWE+gkWBoWyN2C24OyBZktpkc4GbF9qSwVdtrD8FdiI0EB4AZGAMmz8mM3QzM4Lj4tYP6
      R2GkayvtzeAEPEV9NRVKIGFHjqScFyJXgeIITc/DkFAGdRx4dz+G99EvZPaZHOB5cvtcj9xW
      a69N/GvUm4mFAthr6NaOiMgdII5xAL512cqgPvD+LnhtWWRLwm+4qIncAWIZB3juS7r1E4yZ
      uSgWIyinPBcmgGAdoH9MdxYo6kLxluDxlq7JZVDNez2ZZsHTkz8mA8rkfK8BaO9aJgfKF8F+
      gbBsHpTvBTtHf9UpWwjYAWaeV5nT0AnwvYVAt2BRsr8jTocG+/WD8IfcbFMc8MHbfvDYNWf0
      NBqHaRObq6Jrpm8YvL8H3tsE726A+io4fMs1pQq4UQfvrIP3tpqtMX3W4/2dgB1A+ppxAKe1
      IMY4gM8nkh9knNZGj9kb8dpQrq2Ba3vwlmRlqJQvHmt77LXaPnhvC+wziQbVXXB9H7xxt+V6
      kZ8BugF1V4j+UUgj5jQ0rSpEoaETMI82s/oEzLAy1bo8It4LlUeAxffEa0eFDYQFQKhdIZyM
      viuEYkaYBl5fEe/FPPuGau2oSEcgrKcPKAtzjoxRt0WJ8d/c0oLIX4E6Egco9IGOOZD5PAF8
      693UxAHM1LxCBu2+CrLIHaBTcQCWzjAmAqUoDsCrC76zgP1wioPidSnXA+eU7MOKIsxJitwB
      LNHCuxtiGVST3sDVHTSEh2Cpo4RBsAUxn/9z3VlgYEL+yWyxhECwBTFvKQ/OXRIHSEtz3PTI
      oBYVaWmOG5YMakpDx6aTm37/VHPqG2oW6e+OHL1WGgQadXDpaKrNk+tZB/Aj1wv0CjtWu7JP
      fsvx8M5as6uDD0/+3J15DvWPfw088XPq6YMpDqCx8vGRaw/v8VvP96ldFgijyiRo5qLQmEDl
      YfnguxDTCTqBGZ8D12WRY1JUpmngRl1cTsuNmr9tLQuu7/t3fzjuHsQgENaJOADvboLXZXns
      IANeuQH+4Ccy+4THAXhzVSyDol8aS7EyqJiOxAHe+BawdkdmS9Q8nKcE3lqVy6CK1ImkyKC2
      Oa4l1QT7DTA8o2oLhP7xQB8fFZQvAT6Kg69tO81xFRN0zMhJua2VQYN2gJOqswANTIDXVwLd
      QiQUik1ZTgA5WXVzXOnaAMD3biVPBu0fA6TnhYCHdATrAJffam3zCLy12hWBMH6wBBZ+2nEb
      zXGlawMAl+TOEhe8tWU0PpK1Zwn6vBD5ITiOpCkd2oycenwa/CdAwtc2AICbhalMCTcRnZSc
      CgegqfPy0z6lKx2aq7vylpaKmmCwBxaqS1GOJfR1AO/TXwcGJ3Urzb7SViCsI3GAxauKtigG
      5rkvqp+RVHh9WS6DavKSGnWwdJrnkPCbAgAVB+GcPTrzudkSMg86eAUk9yAwBsD0DT2Wq/Xo
      Nf9vgPd+CP7RP4s3BbTvxR2LA8hX161t6Shc3UV99XZLO3diFvU7N5r/8YT9o9dS8QoUNtoZ
      YVDM8VLN/NLaK2eEhSWDkps9thfQEZxgzwvWAQJAOyOMShX5HC/FzC+tvXZGWFgyKOWLx/YQ
      OmLrKg7iAmxBTACoZ4QZR26vmPmltVfPCAsJb+u+vIdQaTjQZ9uCGB+obxg0KjzwSZtQxRSq
      TD0cINfSVuMwTgYkTZ6zMmgMiVKbsxwL5XvhjLWeUWD6hoDb11raRe4Aahl0cBKslGhp6ryu
      PfrGXfDyhzJzJwOanlftJ07w6oJcBlWcRdCoiVupQ9yy5iDLVNBPloQlqv4O8MwlffHD7CvA
      97+tuwd6GZTe/AtQRecAvHgF3i9te/SugBmQdKcQBu0ijwNo4Y27YGn97SFTz4azmUPCnBEm
      /CR7zD6kGWFhyaDdkwyXUkKdETYwrmuOOzAe2oywsGRQVTLc3GvidU15BH6BTSqUYMpNNck6
      QACEPiNM0xXiHMKbEZYwmukORx2g/sj5LlgHmHhGZz88AzQUCVaWwKHymDgZjhQdMEKrCXYz
      oN5y6zWzBfD2Wuvl5E8W0NuvK4jJl8Db64FuIQjSlA5NuQJY+ncluV4fVk0wkZE5jDA+E6wD
      XPuxypyr27EMhKUpHdpb+Ugugw5EX8LKtSq89aOTX57E9PaL1ov8DKCOA4zPAmdf1j1EGQcQ
      yWwphHrKoEnZay4pEviiJHFxAHzuz8D3F3UPWbiSmjGpoc4Iq+2BN2Q5/jwiS68A4iiDxjgO
      gOoOoHWAkIlTc9wwZ4RxrQpsrsqMhXsAwpNB3YnZ1jbi1SzHErvmuCHNCEsa9STkAlmihYoV
      cWtEUmS+hiWDUqEo+mQ35ZFkJMPFERo5CTpztO7Ul4ArlDoNlSqAsDmu9DUPCE8G5d0t1O/e
      bGkn/cW2BTE+8Ppd8B1ZgQacDCgG8mC7eEvvy2XQBPYcaoUtiPGjug1sPZDZKpPVkgwVSqDR
      1rn4QLPMUb5un7yHUDbGJZHt0JExqdPzNg4QBI16U4UToBmoB68u7yHkyVNn2leB+sf0eT3S
      QdRP0KkxqWHGAUKVQUdOyotzEG5zXN7fFRe5kDDbFWieF8Q9hOo18brtq0C5HqCndcLR4/eE
      Mz0kCYQpg5IxzX8PIWE2x9VA2TwcYVq2puaB8j1wRmZa2pmSbKaxvwPcuQ58oCw60X5jWESw
      54HvXJfbKw/kVOgDC2VIUkSOuVY9du7XkzjT5+Xr7u+hcX+ppZ00kyHyM4AlWqgyBTpoE9gS
      TXNcZkXPUYVy6HmAZL/CM4h1AB/SlA7tLVwWy6BG+1oshQxghL+KARfx2DiAD2lKh9ZAuV7Q
      kFC2zsmnjJq+IWBKeF7QTi9tgY0DWOSElPHora+gIexm5+Tl2aCJSIbrhjiAdkYYFYpy+7zc
      FghZBt3bBt+7JbKlMeGcZS2OKwuyZXKof9zaqSJ3gG6IA2hnhCFfktvne2MzI0xDaMlwjiuq
      CaBMXrRe5AUx3YB6RlgmJ7b3SkPhzgjL9kD8bkPyqbqhJcPt78F70FoGNQVZKkbyCmIsgWLG
      Z2WyIuTaepKI/BUojtD0PIz0085JuAz68dtyGVTRoEuD6R+NWUlkyuFbl60M6kNYrRG9tTvd
      URJJL31Dd0NlCrwsD/NboiWs1ohh0fGSyOaUD8ULgSZodkgmD3RhYUZQmKETgLBNqVYGjQPx
      Lonc3dDZ723rOxT39gNT8uQpAOAUndC9ezdjIYOGRaxLIjsBry2Dr/xAd9NY60+MtOLMvQoW
      5tgHfQCNA8HGAd75nwC2ZOkkjfd/FLkKRPmifJ5YJtjBfjYO4ANNPAMj7ZnjuImWQbsZySyx
      xL0CdQJe/hDee8L3aCcLeuEr4W4oJlBlEvSpr8psSxWxDMp7W/J5YuOz4lygxq0rLc2sA/jh
      1eW1pyn6+OfNB2jceldmrEhv0KDKBRIkNQYbB3jlD3T25RHw9Z+DNYcraaHKo2Ry8vz0NtYP
      tSh+eAbe9Z/L9zLcul72oW2IMijlekNJhutMLlCbaLM0eXwOdO6SqpU2DZ0An7yoeg5VJmHE
      n0j600y4RfGueOYXAPD9xVjIoFzdlkd3Q/q2kBD5KxB/8BNdOvTgJLC7qXvG8nX5L0XM2qOz
      V5fP/IJeqdHIoBB+qiaJyB1Aze5ms2uFhvkvhLKVbkAlgz7/Zih7iN98gFOfkncKOGTmeRsH
      sLRF/OYDLF4FX35L/CAA8kBGAkhTVwgNVBoUv6+b4iDCaDCpyQXav9L6tdffAfZ3gR3l9EZF
      K7y4Y7tC+MOb9yOXQVOfCxRLjCOfy+VkVPakWRuAGT4ht02gDBo00ccBVhd0nYSFxc6PPadv
      CDQqnLUlbx/xm1uGZ+SdJJwMTGUS0ggaDU3D1F4U74Xv37YyqILo4wCKlihA8xcCL/6u6h4Q
      KeT9NuIAd66r4gCoVeUzwpyMfG3oZVBz+iWgIRQ8Am5K9XAP5RHgxLMiWwpYio38FYhXbgCL
      rXM2HtqfuAD+1X/oHlIelbcYJwIpoqlJR1UT/Kxs+LR6Dxv30Fi4KrJ1CvKgaSIaY6mRNke1
      yGjUmn8EUKEIMy5reEWKX1Sw18y/kqybzcMRTJOh3n7Urv2kpZ2/A2QL+vkAXdQyw8qg/nB1
      F94DWdam6R0IZw/1fXiCWcXUK3NAfweYPAfSyqDj3VN1ZWXQY2jUgb0tmS2RfO6XZmJ9owGW
      SO7C9A5/B/joF+Cffke+KQAUVutsi4rYFMUzy+cPh7MDEck7A8SQUNOhx4Ty7QH8YCkeMmij
      Bt4Qzv2SflOEQPRxgFoVGFCkUWgOV4fPGT0N88zrQmN9PUCY6dAA5L/QaEMGnbkoFxXy8lll
      qj3ELhmuTdqKA/T2gxUyqHnzBUDpaHx/sSn3SSADM/uKav0k4y1dk8ug5ZFw9qBJhjv/W7KG
      DW4mGTIoV3dU+f1857q+Pfob32r2IJIQ8Aie2LO/I3YAyvWI5w9oBmVrIDcLI5iXQLle1G62
      K4OmHePKJ8BHmMfSabi2D95ekxmH9G3B1V00Vhda2pFwbK91AB9o7AxMXTjh0KSoLUpd4QBO
      JsHJcClvjMW334P3zvdkxmmKAyhIdjJcyhtjaYmTDKqxj0tz3K5RgdJKnGRQlf3pXZipebkM
      Knyv1hK/ksg2aScOAOOqpkSiV5+RSFPnQ50SmWR4dUEcsTWD0QWsDulMSWSbtBMHgJtVtUUx
      3/gb4NKf6p6zeBXeL0OcEplgeHdDLoP2liOvCU59SaS3tgxP2R7dXExH786wiUNNcNAkzgE6
      Ac08ByM8pKYpHVpDKmuCuwXv3i14wkMZHBfmtLxmNy0kWwbt6QPKo7qVunB6iBQrgz4dYcmg
      7atAQycAZQPaKFNaoybRMuj4XDMjV0JW35FDgkYGdS++2QEV6OY7wNtC1eSQ8ijg5qBqmO9m
      Dv4o3gHbSFe2HA9vrsoLV7wz8uqtkP6dYq0C0cUv6wZG9I+BHAc8MCG/Z3BS3uPncF/KOECa
      DrW8tSqXQfO9cIQTOpNSIRhsHOBn39XdMD4HVsYBaHhGnXfBi1dUcQB69Q91D0gJvLUmlkHd
      c6/Dkfb6kWbehkDiVCDe3ZD3+DlA/Y2RLwKCnHOgeai1HIX3d+W9fmaeC3k3x2P/9fzIF0F9
      smn0ZOz/Ql+Yxb1+TP+oTYaLE7y2DJZOOHRcuJe+aWXQpyAsFUjyy+1vM3oaOPuyaEMPGT6p
      s+8iEi2DjpySy6DS6HiIaFSg+u1rIrujVHdSPR8gTXB1FxDKoGAv3M1EgL8DrC0Dt2WvAA85
      +3Lzm0MBVSYBJwPe35Hf40b/KdRN8PqyvCtEoRR5NmjQBHsG0PbsyfU235019w1OyHv8HEDT
      8zYOEACabFA6dymFyXA3hAlkB3B1R10PgFOfkvf4OcDki/CkkW0bBwgETTKcO/syIG2j4ij6
      iEqeHehqHYAbNXmPnzYxY2fFoXwyjjiVwOIP5Yswwu6ApqcMMzDees2evmQ0xooj3vIH8N77
      X5mx48Kc/YxqRpiZmJPLoMMz8K79WLY24jMjTIO3dR/e0gciW+ofBwsaqXGt+hQqkEWFdkaY
      d/t9sQxKynoD7YwwqkwBYhk0Bk3AGnWwpEW78O9kHSAAtDPCzAl56J8b9VBnhGmg3gF5fk9I
      AzKCxjbGSjm8uiCWQXl9RZzf454ugKQdPCJMcQ+0MRad/xxU+dCDE00ZtKj4tMint/IschT5
      PTAmwQ7QJrx4pfk/SQjVqoCbBS/KPlUAgOY/D/OCrssDTdk4QKfhWhXeyg2RbWbyXMxKIttl
      467KnIuDzTjApnCSCAC+e0Pet/MAw1DFAcxX/hIkjWrbbNCnJn4lkWmnvt/Mh5LguAB03erU
      MqhmQkxcZoSFRKxLIrsF3lkHr8nGgcJx4Vz4vCodWi2DKpQd7YwwKo/Jk+Hc6Cq3wsI6QAC0
      kw4thRv1UGeEUa4AFs5EpuIAnEnZ10uya4JtX6DU4K18JJdBx+fQEB5s3fJIgpPhbF8gix9e
      Q/y6xLsb8oPts1+Qzx7TxqdaPdv3p232BepIe/RiRT6/6xBHMfNL+DpgCZD9PfHoJcrmOlAS
      2SadaI9Ov/e3MOeV77mjpxX3GBsH6DBckzuAt7XWgZLIGMMPlvRxACcrv4cIzu//vU2HTgmJ
      c4BOoE2HTnJXCF67I3fgLuyB1H1/owhIclcIKlWAuix1mPrlyk46a4IticNbel8ug1ZOhFMT
      nC0AGWHn6YBFCusAllDQ1ARnnv8yHKkM2tsPUx5ubVcoPUUynK0HsHQQb/MeGsKMYKc8ApaM
      dW3Un0IFarceoBNxgMoUqDKte45tj9491Gvg7dZN27gsa9SWvDjAV/8KKAhbaBw+R9ke3fna
      X4vfi8UDIyyxJHFnAN5eAy9cUd2j/cbgtWV4wua4cFy4n/l6YmVQ6ukD12uyG7ow3ytxDtAJ
      uL4PSNs1Om6iZVBv4bL428659E25DDowLo7uRllUZB3AIkY1KNu4Ygdwps7LSyJ7+mSvnUS2
      MZYlQry6PL/nwZI8c/T5L8MZmWlpZ0oV7F9tHc23DmBJFLy3jYYgGY6E4kTkcQAqD4O3J+U3
      RFg8Yek+Io8D8NYDkLQAHQCNnAJCbotCg5OAsAOalUGTTeLiADw+G35blPIIvHu3hIu7cF/8
      nVTIoNRbVuTsJOODwZ4BfOD9XfmIqDTJoK/9kThnRzP50ZQqYGlJbTbYCUHWASxieHtdnLOD
      bF6s7NC518U1CU6uN74lkRZLO3B1B7wh6w7obd4PtCTSVoBbUo11AEuqCTQOQNUdVXdoVKaa
      daa5Hvk9OV0mqMXySQQaB+DVRWjmA5CbBdwM+P6i/J4Xfjv09uikHJJHQ9OpkEEhzcMBmnZi
      KVT8jxM4wR6C7y+ozDnX24wDKByAVz4KPQ5AhZJuSF7txXTIoK//cTNxTYDpHwOktpVJSD84
      zeA4XMGHh1WBLIHDW2vybFDHReOmMMDpuGLJFJmCVYEslqCwDmBJNdYBLKnGOoAl1QQbB1AO
      R26nLQpNPws4upoAmp6XezpZGfRY++EZOMIxSWZI3ohAZRuwCvT/5HlZXObyrpMAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Geração' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAO+0lEQVR4nO3d23MTWX4H8O/p1s2yjC3fsIxtbGxsg819gAGGYQZYdnYnSVUqVUnlYfc5
      +T/ylKek8pDKQx52Nw9bm6pQ2drM1tTsDjsXGGCWi5kB29jGsvHdsmxZsnXr7pMHYcHUShg0
      x5aX8/1UUWpL+PzO6dYXNbr8JKSUEkQaEkIIo9yTIConBoC0xgCQ1hgA0hoDQFpjAHaQ2Oxj
      /NfPfoZf/vLXmI0nSxvEyWAyPA0LwMzYYyQspVN847jKPQF67v+u/hYXfvqPCHkAaZoY+voa
      HkdduHzhGAbvDuDp/CKOX/ghxMK3uDW4hMsfvI/BgfuoqmtELPwQi1Y1zvRW4l//5b9x8W//
      Hq1YQ2VbGl9/dg0R0YhLp/fj3q3bmIum8PalS9hd5Sv3ksuOjwA7SEwaqLIW8B//9M+4ffcz
      /OfVrzB+70vcGHiI2w/mcO7Ibvz+o0/xi1/9BtGJO/jfP3yLu19/hq491VhZTWDk1lUMJxtw
      tP8ELpzpR/jBQ4wO38K03YzmtQF8+mgC34wsoS9k4e7QfLmXuyPwEWAHOdFei0++nkBbVys8
      vgCam9tw8cIxNDa4MTkYhdfrgWm60RhqxfHTp1EbrMPHkT3IRsIIJ9zo69wDabhg2CuYmIpA
      AvBU+LG2NIOpTAbBDhe8FRXweUwInhoBAARfCd45pJPFk+EhrKMCXV0dWJ19grlYFh372rCe
      yKC+xoNoQsKdXcbE/Apa2ruQTSXQVF+NscejMHwVqGtqg7X8FNGMD0GPwK6mesyPjyIhAtjf
      Vo+l6Bpq/ALr0o+g5qdAQgjBAJC2dsRbIaSUcByn3NMgTTEApLWyB4ConBgA0hoDQFpjAEhr
      DABpjQEgrTEApDW+F4hKMjA6h2v3wsrGO9LVhPePtSsb71UxAFSS6UhcaQD8PjcDAACPwouY
      nI8pG+9gewPadlcrG4/eLIoDIDE1PIDByUUsRhP44MoZ3PryDuAL4J13D+HpWBrNwXVMrfvR
      3xkqOMIXDybx0c0RZTP6h786wQBQUYoDINDScxShtmV8+yQKa3YafZd/DF9kDMsrq4hFlrC6
      auCt052QUn7nj23bAHLvDVLJeWFsUkc6ao+TLNNx2oJTIIm56Rk0NHcAMzEYBiAgAEhkUkmY
      rgpICUDgT0Kw8ftqpyOVh+p1jU5H8fOPB5SNt7+lDj+5cljZeKWQyo+T+n/8XoXyANiZdSyu
      Cxzq9EO6Q/jdp5/A9Hpx8kwf6po7sKcuhUejUzjc3QLTNPPvBHW5clNR/Q5twzDyY5dLMmPj
      YXhJ2Xhej6fsazIMtcdJGKIsa1Je0XD7cai/F6YAZGUTLl+ugxQmXC4Duw5KCCGwq5Fvf6ad
      QXkAhBAwhchvu9ye57cZuetN01RdlqgkfCWYtMYAkNYYANIaA0BaYwBIawwAaY0BIK0xAKQ1
      BoC0xgCQ1hgA0hoDQFpjAEhrDABpjQEgrTEApDUGgLTGAJDWlH8kUkoJx7YhIWCaBhzbghQG
      TNOAdADxrBuE6g9VE5VCeQDWo5O4/sfH2NXYgqOdQVz7YgDC68WZc/14OpZGqGYNc9ld6Oto
      Ul2a6LUp7ww3N/4U9Xvb0VBTi9jTMPovXYFv8Qliq3FE52YQXwvg5Knu/JfjbVxaVu6bm6VU
      2zHixbHLxbHVrklKWf41Kf5iQ+mUZ03qT4GEAa/Xi9mRIVRVCFTKjSZKAi63F042DUcCpsh1
      jQBylxvbgCg6dkm+M3aZbEH9sq9JNVGeNSlvjRhqb8GNO0OwRAV6D3Xh+u8+gqgI4Oz5fsTr
      PWhtzODh8CSOHmiDIQQcx8m1UnnWKkX1TjBeGLtcDEPtmsSOWJPixlhlWpPyR4DKujb84Epb
      /ucf/eWH+e2+vtzlsQbVVYlKw6diSGsMAGmNASCtMQCkNQaAtMYAkNYYANLajvuWSCpdOmPh
      5x8/UDaez2PiJz88omy8nYgBeINkbQe/+eqxsvGq/J43PgA8BSKtMQCkNQaAtMYAkNYYANIa
      A0BaYwBIawwAaY0BIK0xAKQ15W+FSK8t4MYX9yFqGnD2RB+G7t5E2t+MY33NiCxkUVctMLeS
      RmuIHwym8lMegFQsgpYj57E/VIH45ABk6AhqE2NYWPYjGnGwPDODxp5jqssSlUR5ABzLwfCj
      LzEz0Yh9XgdNR6rhnq3FajaJ8MMBVO07gAOVbjiOA9u2842xNhotOY6tdD6WbSOTySgd87Xn
      oLjhk+M4Bde0FessNqZtqT1Ojl14TVtNeWc4UdGAS5d6MXjnFsyAD1PjUVStLyKwpwXtfafg
      sWcws5xCc9AHwzDyd36XKzcVw1DbG8ZlmvB4PErHfO05uNTuZsMwCq7Jo/Y+mRuzyL4zXWqP
      k2EWXtNWU/6f4IoKE3evfw5v4z40dR1DZWwISW8TmoJBNDXVoOvgYdjJGKTqwkQlUN4Zzhuo
      x7n3Luav6T1+Nr9dX5+7bG32qS1LVCI+DUpaYwBIawwAaY0BIK0xAKQ1BoC0xgCQ1hgA0hoD
      QFpjAEhrWrdG/NW1h0hn1b2D7O/e74PHXd4vr6PXo3UAfn19GPF1dW/B/evzvQzAnxmeApHW
      GADSGgNAWmMASGsMAGmNASCtMQCktS0JwOpiGLfujcCxU7hz/Rq+ujuIrLOG6ellpBNRhKcX
      tqIs0Wvb5IUwifEHN3F/bC5/zb5DZ3Gka3fR33CsFManppBOVCM2OQRvx0nUxcewEF3BctTB
      8uwsWvqOq5o/0fey6SvBDa1deCvYkv85UFP9kr8tsfh0HMHW/ciORpCM22jYG4BbVmPVSiH8
      aACBjl70V7h2RGMsqbg3SzabRabAC8FsjLW5HdoYSyAQbICTGsK//9sv4KmrxP73foq/ONFS
      +K9LYHl5CU9Hn2BqIo7693owPzSDQHoOde3taO87Db+Yw2RkDa31lXCXuTGWEEpLwe12F6zF
      xlibK1djrFc6MonlVTS37EXTkRYsT0eBYgEQAr3H30EvslhcSKCuoRrOo/vI1LRjdzAILyxU
      V9VjIRoHUKlwGUSleaUABJvb8e6HDRgbfoiDh/a8wm+40dAYBADse+F8Pxj0AgCaGr2vP1Oi
      LbDps0BWJo7b1z7FzftjCNaYePRwajvmRbQtNn0EkI6N9eQ6VtIRzFc04OL7fdsxL6Jtsekj
      gNtXgzPnT8Kws8hEx3Dzm5ntmBfRtnilF8KsTAaVwUa0tTQgvZba6jkRbZtNXwhbWYxgV/th
      nM4OYXld4kenu7ZnZkTbYNNHgPuf/AHz6SxCbZ042NsFl2Bnf3pzbPqf4FRiFh9dvYrAs5+7
      T1zEyd7QFk+L6Ln/+XwQs0sJZeP9zbsH0FSXu0dvGoDOE+/inRNH8wEg2m63B6cxOBFRNt6l
      4x2vGgCB/SeOKitMtNPw8wCkNQaAtMYAkNYYANIaA0BaYwBIawwAaY0BIK0xAKQ15QGwMyks
      RSJYXUtBSolELIpYIgkJG5mMBenYSKW3/9P/RIUo/oIMidWlWYTnVrC8uoZTB1tw+9sZuA0L
      h946gJnxDBoqY1hx70ZPS53a0kQlUBwAgV31zfDOzsFfWY34TBQHzp2Bd34c8Xgcs09GEQvt
      wdtv1eXboWz0BZLPmvTIZ/2BVLEdB9lstuBtqvsCWZaFbPZPe62o7qEji6yp2Dq/j2Jj2rbi
      vkAvPU5qD5RlW/layh8BhOnC3s4ejI48QcaxIbISprRhCA9qQ23IpKLIOhJeQ8A0TTiOAyEE
      DCN3NiYMtc16DMOAaRbuYaO4LRBM0yxYyyhSv1RCiIJ1XKb6b7wqtu82jpcqhnjJcVLcwOnF
      46R8j82MfoOhiUXYrgB6TvXg+me/hfAHcebcQSRjPrR2V2N45CkO97ZBILc4KeULO1TtYgVe
      crAUJ+DFIH/3erV1UKyO4n88gOL7TvWdEkJ9qIqXer7/lJ8CtXQfRUv382t+8OMP89vdz64/
      8rLuikTbiE+DktYYANIaA0BaYwBIawwAaY0BIK0xAKQ1BoC0xgCQ1hgA0hoDQFpjAEhrDABp
      jQEgrTEApDUGgLTGAJDWGADSGgNAWlMeAMfOYG56EgvRVUgpEZ2fzm3DQjKZgWNnkVhLqi5L
      VBLlXSFi81NYjGWwPDENT0c9Bp4k4MUTGId7MDeRRa0vimRlKwKVFapLE7025QGoCXXAF1jC
      sO0gMR9H7+ljcM+OI7GWwOTgN1jp6MHZzho4jpNvrrTRJCu3rbbhkmXbyGQKt2JU3Rgrm80i
      U6C1jWVZSus4jlNwTdki6/w+iu075Y2x7MJrAragMZaVzddSHoDU6jxGptbR13cA8dG7iK5Z
      8FsZuLx+tHQfQSo+haTlwO8ScLlckFJ+p9GTYahtImWaJtxud8HbVHfRcbvdBWu5XGp3s2EY
      hetY6r/EvNi+K9bEqlSGWXhNgPoeRC7X8+OkvDPc/PgIJudTmF9cwNsnezB1/feQlXV4+1Qz
      0vE0uju6MRqeRt/+Vgg8T7fyRkvPbDTfKnqj6npbtI5XqbMVtbdrPeWqpbwxVvvR82h/4Zr3
      rnyQ3+7szF3271JblahUfBqUtMYAkNYYANIaA0BaYwBIawwAaY0BIK0xAKQ1BoC0xgCQ1hgA
      0hoDQFpjAEhrDABpjQEgrTEApDUGgLTGAJDWGADSmvIAJGOLuHH7JiKxFKS1hhvXPsHnN+8h
      ZcURDi8hGZvHyOS86rJEJVEeAJe3Es2hesiMjVh4GHWHzqOjwYOl5RUk4usYHg4j1FSvuixR
      SZT3BXL7/PC5cz1jUkkD1R1euFN+xO0Mwo8eINDRg0q3mW+MJaVkY6zXVKwxVrF1fh9FG2NZ
      f76NsbJb2RgrvbaKSGQJhmGitbEC9+89ht+OoPVAF9r7TqHGE8HY7Ao6m2vgNoz8nX+jeZTq
      xlgu04TH4yl4m+o2NG63u2CtrWiMVaiOR+19MjdmkX1nutQ3xip+nNQeKLfr+XFSHoBseg2A
      D46ThFHbia7UOLLeA2jYVYWKvTYC/kYsx9dVlyUqifIABGpD6K8N5X+u3Ls/v11VlWtHV1tT
      rbosUUn4NChpjQEgrTEApDUGgLTGAJDWGADSGgNAWmMASGsMAGmNASCtMQCkNQaAtMYAkNYY
      ANLa/wPiinS3jyYcwwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total pontos' width='192'>
      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
      vHZrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total tipo' width='192'>
      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
      JnrZ1OdYkvgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
